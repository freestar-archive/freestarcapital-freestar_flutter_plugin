def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.freestar.ads.flutter.freestar_flutter_plugin_example"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude("META-INF/*.kotlin_module")
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    //begin Freestar
    implementation 'com.freestar.android.ads:freestar:5.1.6'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-process:2.5.1'

    //Freestar Ad Quality
    implementation 'com.freestar.android.ads.quality:quality:5.0.3.2'

    //Google Ads Manager (GAM)
    implementation 'com.freestar.android.ads.google:freestar-google-adapter:21.5.0.1'
    implementation 'com.google.android.gms:play-services-ads:22.1.0'

    //AdMob
    implementation 'com.freestar.android.ads.admob:freestar-admob-adapter:21.5.0.1'
    implementation 'com.google.android.gms:play-services-ads:22.1.0'  //can remove if already used

    //GAM mediation adapters
    implementation 'com.google.ads.mediation:applovin:11.10.1.0'
    implementation 'com.google.ads.mediation:adcolony:4.8.0.0'
    implementation 'com.google.ads.mediation:tapjoy:13.0.1.0'
    implementation 'com.google.ads.mediation:facebook:6.14.0.0'
    implementation 'com.facebook.android:audience-network-sdk:6.14.0' //req'd for mediation in GAM

    //AppLovinMAX
    implementation 'com.freestar.android.ads.applovinmax:freestar-applovinmax-adapter:11.5.5.0'
    implementation 'com.applovin:applovin-sdk:11.10.1'

    //AppLovin
    implementation 'com.freestar.android.ads.applovin:freestar-applovin-adapter:11.3.3.1'
    implementation 'com.applovin:applovin-sdk:11.10.1' //can remove if already used

    //Amazon TAM (Transparent Ads Marketplace)
    implementation 'com.freestar.android.ads.tam:freestar-tam-adapter:9.7.0.0'
    implementation 'com.amazon.android:aps-sdk:9.8.2'

    //AdColony
    implementation 'com.freestar.android.ads.adcolony:freestar-adcolony-adapter:4.6.5.1'
    implementation 'com.adcolony:sdk:4.8.0'

    //Criteo
    implementation 'com.freestar.android.ads.criteo:freestar-criteo-adapter:4.4.0.1'
    implementation 'com.criteo.publisher:criteo-publisher-sdk:4.4.0'

    //Unity Ads
    implementation 'com.freestar.android.ads.unityads:freestar-unity-adapter:4.7.1.0'

    //Vungle
    implementation 'com.freestar.android.ads.vungle:freestar-vungle-adapter:6.10.4.1'
    implementation 'com.vungle:publisher-sdk-android:6.12.1'

    //Tapjoy
    implementation 'com.freestar.android.ads.tapjoy:freestar-tapjoy-adapter:13.0.1.0'
    implementation 'com.tapjoy:tapjoy-android-sdk:13.0.1@aar'

    //Nimbus
    implementation 'com.freestar.android.ads.nimbus:freestar-nimbus-adapter:2.10.0.0'
    implementation "com.adsbynimbus.android:nimbus:2.10.0"
    implementation "com.adsbynimbus.android:extension-facebook:2.10.0"

    //Pangle
    implementation 'com.freestar.android.ads.pangle:freestar-pangle-adapter:3.7.1.4'
    implementation 'com.pangle.global:ads-sdk:3.7.1.4'

    //Prebid
    implementation 'com.freestar.android.ads.prebid:freestar-prebid-adapter:2.1.0.2'
    implementation 'com.freestar.android.ads.prebid:freestar-prebid-core:2.1.1.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.19.0'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.0'
    implementation 'com.google.android.exoplayer:extension-ima:2.19.0'
    implementation "androidx.localbroadcastmanager:localbroadcastmanager:1.1.0"

    //HyprMX
    implementation 'com.freestar.android.ads.hyprmx:freestar-hyprmx-adapter:6.0.3.0'
    implementation 'com.hyprmx.android:HyprMX-SDK:6.0.3'

    //Ogury
    implementation 'com.freestar.android.ads.ogury:freestar-ogury-adapter:5.4.0.0'
    implementation 'co.ogury:ogury-sdk:5.4.0'

    //Fyber
    implementation 'com.freestar.android.ads.fyber:freestar-fyber-adapter:8.2.0.1'
    implementation 'com.fyber:marketplace-sdk:8.2.3'

    //Smaato
    implementation 'com.freestar.android.ads.smaato:freestar-smaato-adapter:22.1.1.1'
    implementation 'com.smaato.android.sdk:smaato-sdk:22.1.1'
    implementation 'com.smaato.android.sdk:smaato-sdk-native:22.1.1'
    implementation 'com.smaato.android.sdk:smaato-sdk-banner:22.1.1'
    implementation 'com.smaato.android.sdk:smaato-sdk-interstitial:22.1.1'
    implementation 'com.smaato.android.sdk:smaato-sdk-rewarded-ads:22.1.1'

    //uncomment if your app is a React Native app
    //implementation 'com.freestar.android.ads:react-native-android:1.2.1'

    //Note: If you want to use Preroll video ads, un-comment the following lines:
    //Important: Preroll is not compatible with Nimbus, so remove all 3 Nimbus
    //dependencies (above) before using Preroll video ads (freestar-nimbus-adapter,
    //and nimbus section).
    //start preroll
    //implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.24.0'
    //implementation 'com.google.android.exoplayer:exoplayer-core:2.15.1'
    //implementation 'com.google.android.exoplayer:exoplayer-ui:2.15.1'
    //implementation 'com.google.android.exoplayer:extension-ima:2.15.1'
    //end preroll

    //end, FreeStar


}